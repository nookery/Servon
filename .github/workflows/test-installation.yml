name: Test Installation

on:
  workflow_run:
    workflows:
      - 'Release'
    types:
      - completed
    branches:
      - main

permissions:
  contents: read

jobs:
  test-installation:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    name: Test Installation on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        
    steps:
      - name: Test installation script (one-click install)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl -fsSL \
            --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
            --header 'user-agent: GitOK-Release-Workflow' \
            https://raw.githubusercontent.com/nookery/servon/main/install.sh | bash
          
      - name: Verify installation
        run: |
          # 验证 servon 命令是否可用
          if ! command -v servon &> /dev/null; then
            echo "❌ servon command not found"
            exit 1
          fi
          echo "✅ servon command found"
          
      - name: Test basic commands
        continue-on-error: true
        run: |
          # 测试基本命令
          echo "Testing servon version..."
          servon version
          
          echo "Testing servon info..."
          servon info
          
          echo "Testing servon info with JSON format..."
          servon info --format json
          
      - name: Test help commands
        continue-on-error: true
        run: |
          # 测试帮助命令
          echo "Testing servon help..."
          servon --help
          
          echo "Testing servon deploy help..."
          servon deploy --help
          
          echo "Testing servon install help..."
          servon install --help
          
      - name: Test port management (if available)
        continue-on-error: true
        run: |
          # 测试端口管理功能
          echo "Testing port list..."
          servon port list 8080 || echo "Port 8080 not in use (expected)"
          
      - name: Test system monitoring
        continue-on-error: true
        timeout-minutes: 2
        run: |
          # 测试系统监控（限制时间避免无限运行）
          echo "Testing system monitor (2 seconds)..."
          timeout 2s servon monitor --interval 1 || echo "Monitor test completed"
          
      - name: Test web server startup and shutdown
        continue-on-error: true
        timeout-minutes: 3
        run: |
          # 测试 Web 服务器启动和关闭
          echo "Testing web server startup..."
          
          # 在后台启动服务器
          servon serve --port 9999 &
          SERVER_PID=$!
          
          # 等待服务器启动
          sleep 5
          
          # 检查服务器是否在运行
          if curl -f http://localhost:9999 > /dev/null 2>&1; then
            echo "✅ Web server is running"
          else
            echo "❌ Web server failed to start"
            kill $SERVER_PID 2>/dev/null || true
            exit 1
          fi
          
          # 关闭服务器
          kill $SERVER_PID
          sleep 2
          
          # 验证服务器已关闭
          if ! curl -f http://localhost:9999 > /dev/null 2>&1; then
            echo "✅ Web server stopped successfully"
          else
            echo "❌ Web server failed to stop"
            exit 1
          fi
          
      - name: Test uninstallation (cleanup)
        run: |
          # 清理安装的文件
          echo "Cleaning up installation..."
          
          # 删除符号链接
          sudo rm -f /usr/local/bin/servon
          
          # 删除安装目录
          sudo rm -rf /usr/local/servon
          
          # 验证清理完成
          if ! command -v servon &> /dev/null; then
            echo "✅ Cleanup completed successfully"
          else
            echo "❌ Cleanup failed - servon command still available"
            exit 1
          fi

  notify-results:
    name: Notify Test Results
    needs: test-installation
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Check test results
        run: |
          if [ "${{ needs.test-installation.result }}" == "success" ]; then
            echo "✅ All installation tests passed successfully!"
          else
            echo "❌ Some installation tests failed!"
            exit 1
          fi